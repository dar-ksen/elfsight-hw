{"version":3,"sources":["components/character-item/character-item.js","components/character-item/index.js","components/character-list/character-list.js","components/character-list/index.js","utils/index.js","components/input/input.js","components/input/index.js","components/select/select.js","components/select/index.js","components/filter/filter.js","components/filter/index.js","components/header/header.js","components/header/index.js","components/pagination/pagination.js","components/pagination/index.js","components/character-modal/character-modal.js","components/character-modal/index.js","components/error-indicator/error.png","components/error-indicator/error-indicator.js","components/error-indicator/index.js","components/spinner/spinner.js","components/boundary/boundry.js","components/boundary/index.js","components/footer/index.js","components/footer/footer.js","hooks/useDebounce.js","components/app/app.js","service/character-service.js","components/app/index.js","index.js"],"names":["Image","defaultProps","name","onPersonHandler","width","height","CharacterItem","image","url","className","onClick","evt","preventDefault","href","src","alt","CharacterList","characters","list","map","character","id","props","capitalizeFirstLetter","str","toUpperCase","substring","Input","containerClass","text","onFilterChange","attrs","classes","classNames","classesContainer","label","htmlFor","onChange","e","target","value","Select","defaultValue","values","defaultValueLabel","Filter","filters","type","species","Header","title","count","pages","Pagination","currentPage","setCurrentPage","pagesArray","pass","i","push","index","isActive","paginations","onBtnHandler","disabled","CharacterModal","settings","activePerson","gender","status","location","Modal","undefined","ErrorIndicator","children","icon","Spinner","Boundry","hasError","isLoading","isFound","Footer","useDebounce","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","characterService","_apiBase","getResource","a","fetch","cache","res","ok","erorr","Error","json","getCharacters","getFiltersCharacter","filterUrl","getFiltersCharacterUrl","getCharacter","filterAddres","filter","App","data","setData","error","setError","loading","setLoading","setFilters","debounceFilters","useModali","animated","modal","toggleModal","setActivePerson","then","catch","console","info","key","results","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db4cf464.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport \"./character-item.css\";\r\n\r\nconst CharacterItem = ({\r\n  image,\r\n  url,\r\n  name,\r\n  onPersonHandler,\r\n  width,\r\n  height,\r\n}) => {\r\n  const onClick = (evt) => {\r\n    evt.preventDefault();\r\n    onPersonHandler();\r\n  };\r\n\r\n  if (!image) {\r\n    image = `https://via.placeholder.com/${width}x${height}`;\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-lg-3 col-md-6 col-sm-12 mb-4\">\r\n      <a onClick={onClick} href={url} className=\"character-item\">\r\n        <img\r\n          className=\"character-item__img card-img-bottom\"\r\n          src={image}\r\n          alt={name}\r\n          width={width}\r\n          height={height}\r\n        />\r\n        <div className=\"character-item__content\">\r\n          <h5 className=\"character-item__title\">{name}</h5>\r\n        </div>\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nCharacterItem.propTypes = {\r\n  name: PropTypes.string,\r\n  onPersonHandler: PropTypes.func,\r\n  width: PropTypes.number,\r\n  height: PropTypes.number,\r\n};\r\n\r\nImage.defaultProps = {\r\n  name: \"Person\",\r\n  onPersonHandler: () => {},\r\n  width: 100,\r\n  height: 100,\r\n};\r\n\r\nexport default CharacterItem;\r\n","import CharacterItem from \"./character-item\";\r\n\r\nexport default CharacterItem;","import { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport CharacterItem from \"../character-item\";\r\nimport \"./character-list.css\";\r\n\r\nconst CharacterList = ({ characters = [], onPersonHandler }) => {\r\n  const list = characters.map((character) => {\r\n    const { id, ...props } = character;\r\n    return (\r\n      <Fragment key={id}>\r\n        <CharacterItem\r\n          {...props}\r\n          onPersonHandler={() => onPersonHandler(character)}\r\n        />\r\n      </Fragment>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">{list}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCharacterList.propTypes = {\r\n  characters: PropTypes.array,\r\n  onPersonHandler: PropTypes.func,\r\n};\r\n\r\nCharacterList.defaultProps = {\r\n  characters: [],\r\n  onPersonHandler: () => {},\r\n};\r\n\r\nexport default CharacterList;\r\n","import CharacterList from \"./character-list\";\r\n\r\nexport default CharacterList;","const capitalizeFirstLetter = (str) => str[0].toUpperCase() + str.substring(1);\r\n\r\nexport { capitalizeFirstLetter };\r\n","import PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { capitalizeFirstLetter } from \"../../utils\";\r\n\r\nimport \"./input.css\";\r\n\r\nconst Input = ({\r\n  name,\r\n  containerClass,\r\n  className,\r\n  text,\r\n  onFilterChange,\r\n  ...attrs\r\n}) => {\r\n  const classes = classNames(\"form-control\", className);\r\n  const classesContainer = classNames(\"mb-3\", containerClass);\r\n  const label = capitalizeFirstLetter(name);\r\n  const onChange = (e) => {\r\n    onFilterChange(name, e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classesContainer}>\r\n      <label className=\"form-label\" htmlFor={name}>\r\n        {label}:\r\n      </label>\r\n      <input\r\n        onChange={onChange}\r\n        name={name}\r\n        id={name}\r\n        className={classes}\r\n        {...attrs}\r\n      />\r\n      {text && (\r\n        <div id=\"emailHelp\" className=\"form-text\">\r\n          {text}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nInput.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  className: PropTypes.string,\r\n  containerClass: PropTypes.string,\r\n  text: PropTypes.string,\r\n};\r\n\r\nInput.defaultProps = {\r\n  className: \"\",\r\n  containerClass: \"\",\r\n  text: \"\",\r\n};\r\n\r\nexport default Input;\r\n","import Input from \"./input\";\r\n\r\nexport default Input;","import PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { capitalizeFirstLetter } from \"../../utils\";\r\n\r\nimport \"./select.css\";\r\n\r\nconst Select = ({\r\n  name,\r\n  className,\r\n  containerClass,\r\n  defaultValue,\r\n  values,\r\n  label,\r\n  text,\r\n  onFilterChange,\r\n  ...attrs\r\n}) => {\r\n  const classes = classNames(\"form-select\", className);\r\n  const classesContainer = classNames(\"mb-3\", containerClass);\r\n  const defaultValueLabel = \"Select for \" + name;\r\n\r\n  const onChange = (e) => {\r\n    onFilterChange(name, e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classesContainer}>\r\n      {label && (\r\n        <label className=\"form-label\" htmlFor={name}>\r\n          {label}\r\n        </label>\r\n      )}\r\n      <select\r\n        name={name}\r\n        id={name}\r\n        className={classes}\r\n        onChange={onChange}\r\n        defaultValue={defaultValue}\r\n        aria-label={defaultValueLabel}\r\n        {...attrs}\r\n      >\r\n        <option value=\"\">{defaultValueLabel}</option>\r\n        {values.map((value) => (\r\n          <option key={value} value={value}>\r\n            {capitalizeFirstLetter(value)}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {text && <div className=\"form-text\">{text}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nSelect.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  containerClass: PropTypes.string,\r\n  className: PropTypes.string,\r\n  defaultValue: PropTypes.string,\r\n  values: PropTypes.arrayOf(PropTypes.string),\r\n  label: PropTypes.string,\r\n  text: PropTypes.string,\r\n};\r\n\r\nSelect.defaultProps = {\r\n  containerClass: \"\",\r\n  className: \"\",\r\n  defaultValue: \"\",\r\n  values: [],\r\n  label: \"\",\r\n  text: \"\",\r\n};\r\n\r\nexport default Select;\r\n","import Select from \"./select\";\r\n\r\nexport default Select;","import Input from \"../input\";\r\nimport Select from \"../select\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./filter.css\";\r\n\r\nconst Filter = ({ filters, onFilterChange }) => {\r\n  return (\r\n    <div className=\"filter container mb-5\">\r\n      <h5 className=\"filter__title\">Filters</h5>\r\n      <div className=\"filter__content\">\r\n        <Input\r\n          containerClass=\"filter__item\"\r\n          value={filters.name}\r\n          name=\"name\"\r\n          onFilterChange={onFilterChange}\r\n          type=\"text\"\r\n        />\r\n        <Select\r\n          containerClass=\"filter__item\"\r\n          label=\"Choose status:\"\r\n          name=\"status\"\r\n          onFilterChange={onFilterChange}\r\n          values={[\"alive\", \"dead\", \"unknown\"]}\r\n        />\r\n        <Input\r\n          containerClass=\"filter__item\"\r\n          value={filters.species}\r\n          label=\"Species:\"\r\n          name=\"species\"\r\n          onFilterChange={onFilterChange}\r\n          type=\"text\"\r\n        />\r\n\r\n        <Input\r\n          containerClass=\"filter__item\"\r\n          value={filters.type}\r\n          label=\"Type:\"\r\n          name=\"type\"\r\n          onFilterChange={onFilterChange}\r\n          type=\"text\"\r\n        />\r\n\r\n        <Select\r\n          containerClass=\"filter__item\"\r\n          label=\"Gender:\"\r\n          name=\"gender\"\r\n          onFilterChange={onFilterChange}\r\n          values={[\"female\", \"male\", \"genderless\", \"unknown\"]}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filters: PropTypes.object,\r\n  onFilterChange: PropTypes.func,\r\n};\r\n\r\nFilter.defaultProps = {\r\n  filters: {},\r\n  onFilterChange: () => {},\r\n};\r\n\r\nexport default Filter;\r\n","import Filter from \"./filter\";\r\n\r\nexport default Filter;","import PropTypes from \"prop-types\";\r\nimport \"./header.css\";\r\n\r\nconst Header = ({ title, count, pages }) => {\r\n  return (\r\n    <header className=\"mb-5\">\r\n      <div className=\"navbar navbar-dark bg-dark\">\r\n        <div className=\"container\">\r\n          <a className=\"navbar-brand text-uppercase\" href=\"/\">\r\n            {title}\r\n          </a>\r\n          <div className=\"navbar-info\">\r\n            <span className=\"navbar-brand\">pages: {pages}</span>\r\n            <span className=\"navbar-brand\">count: {count}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string,\r\n  count: PropTypes.number,\r\n  pages: PropTypes.number,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  title: 'Example title',\r\n  count: 0,\r\n  pages: 0,\r\n};\r\n\r\nexport default Header;\r\n","import Header from \"./header\";\r\n\r\nexport default Header;","import { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./pagination.css\";\r\n\r\nconst Pagination = ({ pages, currentPage, setCurrentPage }) => {\r\n  const pagesArray = [];\r\n  let pass = false;\r\n\r\n  for (let i = 1; i <= pages; i++) {\r\n    if (\r\n      (i >= currentPage - 1 && i <= currentPage + 1) ||\r\n      (i === 1) ||\r\n      (i === pages)\r\n    ) {\r\n      pagesArray.push({\r\n        index: i,\r\n        isActive: i === currentPage,\r\n        pass,\r\n      });\r\n      pass = false;\r\n    } else {\r\n      pass = true;\r\n    }\r\n  }\r\n\r\n  const onPrevBtnHandler = (evt) => {\r\n    evt.preventDefault();\r\n    if (currentPage - 1 > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  const onNextBtnHandler = (evt) => {\r\n    evt.preventDefault();\r\n    if (currentPage + 1 <= pages) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  const onBtnHandler = (evt, index) => {\r\n    evt.preventDefault();\r\n    if (index !== currentPage) {\r\n      setCurrentPage(index);\r\n    }\r\n  };\r\n\r\n  const paginations = pagesArray.map(({ isActive, index, pass }) => {\r\n    const className = `page-item ${isActive ? \"active\" : \"\"}`;\r\n\r\n    return (\r\n      <Fragment key={index}>\r\n        {pass ? (\r\n          <li className=\"page-item\">\r\n            <span className=\"page-link\">\r\n              <span aria-hidden=\"true\">…</span>\r\n            </span>\r\n          </li>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <li className={className}>\r\n          <button\r\n            className=\"page-link\"\r\n            onClick={(evt) => onBtnHandler(evt, index)}\r\n          >\r\n            {index}\r\n          </button>\r\n        </li>\r\n      </Fragment>\r\n    );\r\n  });\r\n\r\n  if (pages <= 1) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <nav className=\"container\" aria-label=\"Charackter paginations\">\r\n      <ul className=\"pagination\">\r\n        <li className=\"page-item\">\r\n          <button\r\n            className=\"page-link\"\r\n            disabled={currentPage === 1 ? \"disabled\" : null}\r\n            onClick={onPrevBtnHandler}\r\n          >\r\n            Previous\r\n          </button>\r\n        </li>\r\n        {paginations}\r\n        <li className=\"page-item\">\r\n          <button\r\n            className=\"page-link\"\r\n            disabled={currentPage === pages ? \"disabled\" : null}\r\n            onClick={onNextBtnHandler}\r\n          >\r\n            Next\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  pages: PropTypes.number,\r\n  currentPage: PropTypes.number,\r\n  setCurrentPage: PropTypes.func,\r\n};\r\n\r\nPagination.defaultProps = {\r\n  pages: 1,\r\n  currentPage: 1,\r\n  setCurrentPage: () => {},\r\n};\r\n\r\nexport default Pagination;\r\n","import Pagination from \"./pagination\";\r\n\r\nexport default Pagination;\r\n","import Modali from \"modali\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./character-modal.css\";\r\n\r\nconst CharacterModal = ({ settings, activePerson }) => {\r\n\r\n  if (!activePerson) {\r\n    return null;\r\n  }\r\n\r\n  const { image, name, species, gender, status, location } = activePerson;\r\n\r\n  return (\r\n    <Modali.Modal {...settings}>\r\n      <div className=\"modali-body-style row\">\r\n        <div className=\"col-lg-6 col-sm-12\">\r\n          <img className=\"img-fluid\" src={image} alt={name} />\r\n        </div>\r\n        <div className=\"col-lg-6 col-sm-12\">\r\n          <h5>{name}</h5>\r\n          <p>Status: {status}</p>\r\n          <p>Species: {species}</p>\r\n          <p>Gender: {gender}</p>\r\n          <p>Last known location: {location.name}</p>\r\n        </div>\r\n      </div>\r\n    </Modali.Modal>\r\n  );\r\n};\r\n\r\nCharacterModal.propTypes = {\r\n  settings: PropTypes.object,\r\n  activePerson: PropTypes.object,\r\n};\r\n\r\nCharacterModal.defaultProps = {\r\n  settings: {},\r\n  activePerson: undefined,\r\n};\r\n\r\nexport default CharacterModal;","import CharacterModal from \"./character-modal\";\r\n\r\nexport default CharacterModal;","export default __webpack_public_path__ + \"static/media/error.9e2eae13.png\";","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nimport './error-indicator.css';\nimport icon from './error.png';\n\nconst ErrorIndicator = ({children}) => {\n  return (\n    <div className=\"error-indicator\">\n\n      {children}\n      <img src={icon} alt=\"error icon\"/>\n    </div>\n  );\n};\n\nErrorIndicator.propTypes = {\n  children: PropTypes.node,\n};\n\nErrorIndicator.defaultProps = {\n  children: null,\n};\n\nexport default ErrorIndicator;\n","import ErrorIndicator from './error-indicator';\n\nexport default ErrorIndicator;\n","import \"./spinner.css\";\n\nconst Spinner = () => {\n  return (\n    <div className=\"lds-css\">\n      <div className=\"lds-double-ring\">\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import ErrorIndicator from \"../error-indicator\";\nimport Spinner from \"../spinner/spinner\";\nimport PropTypes from \"prop-types\";\n\nconst Boundry = ({ hasError, isLoading, isFound, children }) => {\n\n  if (hasError === 404) {\n    return (\n      <ErrorIndicator>\n        <span className=\"boom\">404</span>\n        <span>\n          No answers found for the specified filter\n        </span>\n        <span>\n          Try to change your request\n        </span>\n\n      </ErrorIndicator>\n    );\n  }\n\n  if (hasError) {\n    return (\n      <ErrorIndicator>\n        <span className=\"boom\">BOOM!</span>\n        <span>\n          something has gone terribly wrong\n        </span>\n        <span>\n          (but we already sent Morty to fix it)\n        </span>\n\n      </ErrorIndicator>\n    );\n  }\n\n  \n  if (isLoading) {\n    return <Spinner />;\n  }\n  \n  return children;\n};\n\nBoundry.propTypes = {\n  hasError: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  isFound: PropTypes.bool,\n  children: PropTypes.node,\n};\n\nBoundry.defaultProps = {\n  hasError: false,\n  isLoading: true,\n  isFound: true,\n  children: null,\n};\n\nexport default Boundry;\n","import Boundry from './boundry';\n\nexport default Boundry;\n","import Footer from \"./footer\";\r\n\r\nexport default Footer;","import './footer.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"mt-auto bg-dark text-white-50 py-5\">\r\n            <div className=\"container text-center\">\r\n                <p className=\"copyright\">Create by <a href=\"https://github.com/dar-ksen\" className=\"text-white\">Vladimir Sukhow</a></p>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import { useState, useEffect } from \"react\";\r\n\r\nconst useDebounce = (value, delay) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n};\r\n\r\nexport default useDebounce;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CharacterList from \"../character-list\";\r\nimport Filter from \"../filter\";\r\nimport Header from \"../header\";\r\nimport Pagination from \"../pagination\";\r\nimport CharacterModal from \"../character-modal\";\r\nimport Boundry from \"../boundary\";\r\nimport Footer from \"../footer\";\r\nimport CharacterService from \"../../service/character-service\";\r\n\r\nimport { useModali } from \"modali\";\r\n\r\nimport useDebounce from \"../../hooks/useDebounce\";\r\n\r\nimport \"./app.css\";\r\n\r\nconst characterService = new CharacterService();\r\n\r\nfunction App() {\r\n  const [data, setData] = useState({});\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [filters, setFilters] = useState({\r\n    name: \"\",\r\n    status: \"\",\r\n    species: \"\",\r\n    type: \"\",\r\n    gender: \"\",\r\n  });\r\n\r\n  const debounceFilters = useDebounce(filters, 500);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const [modal, toggleModal] = useModali({\r\n    animated: true,\r\n    title: \"Person detail\",\r\n  });\r\n\r\n  const [activePerson, setActivePerson] = useState(undefined);\r\n\r\n  const onFilterChange = (key, value) => {\r\n    setCurrentPage(1);\r\n    setFilters({ ...filters, [key]: value });\r\n  };\r\n\r\n  const onPersonHandler = (id) => {\r\n    setActivePerson(id);\r\n    toggleModal();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    characterService\r\n      .getFiltersCharacter(debounceFilters, currentPage)\r\n      .then((data) => {\r\n        setData(data);\r\n        setLoading(false);\r\n        setError('');\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n      setError(error.status);\r\n    });\r\n  }, [debounceFilters, currentPage]);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Header title=\"Frontend Engineer Home Task\" {...data.info} />\r\n      <div className=\"container layout\">\r\n        <aside className=\"sidebar\">\r\n          <Filter onFilterChange={onFilterChange} filters={filters} />\r\n        </aside>\r\n        <main className=\"main\">\r\n          <Boundry hasError={error} isLoading={loading}>\r\n            <CharacterList\r\n              characters={data.results}\r\n              onPersonHandler={onPersonHandler}\r\n            />\r\n            <Pagination\r\n              currentPage={currentPage}\r\n              setCurrentPage={setCurrentPage}\r\n              {...data.info}\r\n            />\r\n          </Boundry>\r\n        </main>\r\n      </div>\r\n      <Footer />\r\n      <CharacterModal settings={modal} activePerson={activePerson} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export default class CharacterService {\r\n  _apiBase = 'https://rickandmortyapi.com/api';\r\n\r\n  getResource = async (url) => {\r\n    const res = await fetch(`${this._apiBase}${url}`, {cache: \"no-store\"});\r\n\r\n    if (!res.ok) {\r\n      let erorr = new Error(`Could not fetch ${url}` +\r\n      `, received ${res.status}`);\r\n      erorr.status = res.status;\r\n\r\n      throw erorr;\r\n    }\r\n    return await res.json();\r\n  };\r\n\r\n  getCharacters = async () => {\r\n    return await this.getResource(`/character/`);\r\n  };\r\n\r\n  getFiltersCharacter = async(filters = {}, currentPage = 1) => {\r\n    const filterUrl = this.getFiltersCharacterUrl(filters);\r\n    return await this.getResource(`/character/?page=${currentPage}${filterUrl}`);\r\n  }\r\n\r\n  getCharacter = async (id) => {\r\n    return await this.getResource(`/character/${id}`);\r\n  };\r\n  \r\n  getFiltersCharacterUrl = (filters = {}) => {\r\n    let filterAddres = '';\r\n      for (const filter in filters) {\r\n        if (filters[filter] !== \"\") {\r\n          filterAddres += `&${filter}=${filters[filter]}`;\r\n        }\r\n      }\r\n\r\n      return filterAddres;\r\n  }\r\n}\r\n","import App from \"./app\";\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}